CREATE OR REPLACE PROCEDURE print_all_claims(json_input VARCHAR)
RETURNS VARCHAR
LANGUAGE SQL
EXECUTE AS CALLER
AS
$$
DECLARE
    result VARCHAR DEFAULT '';
    ceid VARCHAR;
    client_id VARCHAR;
    user_name VARCHAR;
    comment VARCHAR;

    CURSOR c1 FOR
        SELECT 
            f.value:CEID::VARCHAR AS ceid,
            f.value:CLIENT_ID::VARCHAR AS client_id,
            f.value:USER_NAME::VARCHAR AS user_name,
            f.value:COMMENT::VARCHAR AS comment
        FROM TABLE(FLATTEN(input => PARSE_JSON(:json_input):Root1)) f;
BEGIN
    OPEN c1;
    LOOP
        FETCH c1 INTO ceid, client_id, user_name, comment;
        EXIT WHEN c1%NOTFOUND;

        result := result || 'CEID: ' || ceid || ', CLIENT_ID: ' || client_id ||
                  ', USER_NAME: ' || user_name || ', COMMENT: ' || comment || '\n';
    END LOOP;
    CLOSE c1;

    RETURN result;
END;
$$;
